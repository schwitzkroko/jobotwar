{"meta":{"version":1},"name":"~circler~ 2","source":{"language":"V2","code":"def angle\ndef cx = 640/2, cy = 480/2\ndef radius = cy - 30\ndef minRadarAngle, maxRadarAngle\ndef radarAngle\n\nstate main() {\n    def dx = @x() - cx, dy = @y() - cy\n    angle = atan(dy / dx)\n    if dx < 0 {\n        angle = angle + 180\n    }\n    yield newDest(true)\n}\n\nstate newDest(init) {\n    def x = cx + cos(angle) * radius\n    def y = cy + sin(angle) * radius\n    minRadarAngle = angle + 180 - 30\n    maxRadarAngle = angle + 180 + 30\n    @log(x)\n    @log(y)\n    radarAngle = minRadarAngle\n    angle = angle + 15\n    if init {\n        yield moveSlowly(x, y)\n    } else {\n        @speed(2 * (x - @x()), 2 * (y - @y()))\n        yield move(x, y)\n    }\n}\n\nstate moveSlowly(x, y) {\n    def dx = x - @x(), dy = y - @y()\n    @speed(dx, dy)\n    if abs(dx) < 20 and abs(dy) < 20 {\n        yield newDest(false)\n    }\n}\n\nstate move(x, y) {\n    def r = @radar(radarAngle)\n    if r < 0 {\n        //@fire(radarAngle, abs(r))\n    }\n    radarAngle = radarAngle + 7\n    if radarAngle > maxRadarAngle {\n        radarAngle = minRadarAngle\n    }\n    def dx = x - @x(), dy = y - @y()\n    if sqrt(dx*dx + dy*dy) < 10 {\n        yield newDest(false)\n    }\n}\n"}}