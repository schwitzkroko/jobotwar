{"meta":{"version":1},"name":"~follower~ 2","source":{"language":"V2","code":"\nstate main() {\n    def angle\n    while true {\n        def r = @radar(angle)\n        if r < 0 {\n            yield follow(angle, abs(r))\n        }\n        angle = angle + 7\n    }\n}\n\nstate follow(angle, distance) {\n    def dx = distance * cos(angle)\n    def dy = distance * sin(angle)\n    @speed(dx, dy)\n    def destX = @x() + dx\n    def destY = @y() + dy\n    @log(destX)\n    @log(destY)\n    yield move(destX, destY, angle)\n}\n\nstate move(destX, destY, angle) {\n    def minAngle = angle - 16\n    def maxAngle = angle + 16\n    def incAngle = 7\n    def a = angle\n    while true {\n        a = a + incAngle\n        if a > maxAngle or a < minAngle {\n            incAngle = 0 - incAngle\n        }\n        def r = @radar(a)\n        if r < 0 {\n            yield follow(a, abs(r))\n        }\n        def dx = destX - @x()\n        def dy = destY - @y()\n        if sqrt(dx*dx + dy*dy) < 20 {\n            @speed(0, 0)\n            yield main()\n        }\n    }\n}\n"}}