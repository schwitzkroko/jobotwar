{"meta":{"version":1},"name":"Corner++","source":{"language":"V2","code":"// Robot Corner\n// moves to the closest corner, then scans the board (only 90 deg needed)\n// performs excellent in battles with more than 2 robots\n\ndef corner = -1\n\nstate main() {\n    if @x() < 320 and @y() < 240 {\n        yield topLeft()\n    } else if @x() >= 320 and @y() < 240 {\n        yield topRight()\n    } else if @x() < 320 and @y() > 240 {\n        yield bottomLeft() \n    } else { //if X > 320 and Y > 240\n        yield bottomRight()\n    }\n}\n\nstate topLeft() {\n    corner = 3\n    @log(corner)\n    yield move(25, 25, 0)\n}\n\nstate topRight() {\n    corner = 2\n    @log(corner)\n    yield move(615, 25, 90)\n}\n\nstate bottomLeft() {\n    corner = 1\n    @log(corner)\n    yield move(25, 455, 270)\n}\n\nstate bottomRight() {\n    corner = 0\n    @log(corner)\n    yield move(615, 455, 180)\n}\n\nstate move(destX, destY, angleBase) {\n    // move to corner, shooting backwards\n    def dx = destX - @x(), dy = destY - @y()\n    @speed(dx, dy)\n    def tailGunAngle = getBackwardAngle()\n    @fire(tailGunAngle + @random(-30, 30), 1000)\n    if hypot(dx, dy) < 30 {\n        @speed(0, 0)\n        yield scan(@damage(), angleBase)\n    }\n}\n\ndef getBackwardAngle() {\n    def angle = atan(@speedY() / @speedX())\n    if @speedX() > 0 {\n        angle = angle + 180\n    }\n    return angle\n}\n\nstate changeCorner() {\n    // pick a new random corner, make sure it is not the current one\n    def newCorner = corner\n    while newCorner == corner {\n        newCorner = trunc(@random(4))\n    }\n    @log(newCorner)\n    // set destination to the new corner\n    corner = newCorner\n    if corner == 3 {\n        yield topLeft()\n    } else if corner == 2 {\n        yield topRight()\n    } else if corner == 1 {\n        yield bottomLeft()\n    } else {\n        yield bottomRight()\n    }\n}\n\n// scan the board, monitoring the damage\nstate scan(damage, angleBase) {\n    def angle = 0\n    while true {\n        def a = angleBase - 15 + angle\n        def r = @radar(a)\n        if r < 0 {\n            @fire(a, abs(r))\n        } else {\n            angle = (angle + 7) % 120\n        }\n        // change corner if damage taken\n        if damage != @damage() {\n            yield changeCorner()\n        }\n    }\n}\n"}}