{"meta":{"version":1},"name":"Battering Ram++","source":{"language":"V2","code":"// robot 'battering ram'\n// scans for other robots, shoots at found ones and goes for the kill\n// ramming them.\n\nstate main() {\n    def angle = 0\n    while true {\n        def r = @radar(angle)\n        if r < 0 {\n            yield charge(angle, abs(r))\n        }\n        angle = angle + 11\n    }\n}\n\nstate charge(angle, distance) {\n    @log(angle)\n    @log(distance)\n    def dx = distance * cos(angle)\n    def dy = distance * sin(angle)\n    @speed(dx, dy)\n    @fire(angle, distance)\n    yield joust(@x() + dx, @y() + dy, angle, distance)\n}\n\nstate joust(destX, destY, angle, distance) {\n    def dx = @x() - destX\n    def dy = @y() - destY\n    if abs(dx) < 20 {\n        @speedX(0)\n    }\n    if abs(dy) < 20 {\n        @speedY(0)\n    }\n    if @speedX() == 0 and @speedY() == 0 {\n        yield main()\n    }\n    @fire(angle, distance)//sqrt(dx*dx + dy*dy))\n}"}}